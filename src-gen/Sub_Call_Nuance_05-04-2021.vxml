<?xml version="1.0" encoding="utf-8"?>
<vxml version="2.1" xml:lang="en-US"
		xmlns="http://www.w3.org/2001/vxml"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:gvp="http://www.genesyslab.com/2006/vxml21-extension" application="../src/ComposerRoot.vxml">

	
	<!-- VXML code generated by Composer 8.1.450.20 -->
	<!-- Diagram created by Composer: Composer 8.1.450.20 -->
	<!-- Project version: 8.1.450.20 -->
	<!-- Diagram version: 1.0 CreatedOn:  -->
	<!-- Application Author:  -->
	<!-- Release Mode: false -->

	<!-- Global Scripts includes -->
	<script src="../include/common.js" />
	<script src="../include/ctic.js" />
	<script src="../include/json.js" />
	<script src="../include/DataAccess.js" />

	<!-- Global Vars declarations -->
	<script>
		var AppState = new Object();
		AppState.System = new Object();
		AppState.System.RetainInputTypeVariableDefaultValue = false;
		AppState.CallUUID = session.connection.uuid;
		AppState.ANI = getANI();
		AppState.DNIS = getDNIS();
		AppState.USE_LCASE_USERDATAKEY = initSystemTypeVariable('USE_LCASE_USERDATAKEY',0);
  		
  		if (session.connection.protocol.sip.headers != undefined &amp;&amp;
			    session.connection.protocol.sip.headers['x-genesys-gvp-session-id']){
			AppState.GVPSessionID = session.connection.protocol.sip.headers['x-genesys-gvp-session-id'];
		} else {
			AppState.GVPSessionID = 'undefined';
		}
  			
		
		AppState._650000Result = '';
		AppState.APP_ASR_LANGUAGE = initSystemTypeVariable('APP_ASR_LANGUAGE','en-US');
		AppState.APP_LANGUAGE = initSystemTypeVariable('APP_LANGUAGE','en-US');
		AppState.COMPOSER_WSSTUBBING = initSystemTypeVariable('COMPOSER_WSSTUBBING','0');
		AppState.EnableFCR = initSystemTypeVariable('EnableFCR',true);
		AppState.EnableReports = initSystemTypeVariable('EnableReports',false);
		AppState.EnableSNMP = initSystemTypeVariable('EnableSNMP',false);
		AppState.GRAMMARFILEDIR = initSystemTypeVariable('GRAMMARFILEDIR','../Resources/Grammars');
		AppState.LAST_EVENT_ELEMENT = initSystemTypeVariable('LAST_EVENT_ELEMENT','undefined');
		AppState.LAST_EVENT_LINE = initSystemTypeVariable('LAST_EVENT_LINE','undefined');
		AppState.LAST_EVENT_MSG = initSystemTypeVariable('LAST_EVENT_MSG','undefined');
		AppState.LAST_EVENT_NAME = initSystemTypeVariable('LAST_EVENT_NAME','undefined');
		AppState.LAST_EVENT_URL = initSystemTypeVariable('LAST_EVENT_URL','undefined');
		AppState.MYDATE = '';
		AppState.OCS_Record = initSystemTypeVariable('OCS_Record',getCallflowOCSRecord());
		AppState.OCS_RecordURI = initSystemTypeVariable('OCS_RecordURI',getCallflowRecordURI());
		AppState.OCS_URI = initSystemTypeVariable('OCS_URI',getCallflowOCSURI());
		AppState.PREV_APP_ASR_LANGUAGE = initSystemTypeVariable('PREV_APP_ASR_LANGUAGE','undefined');
		AppState.PREV_APP_LANGUAGE = initSystemTypeVariable('PREV_APP_LANGUAGE','undefined');
		AppState.SCRIPTSDIR = initSystemTypeVariable('SCRIPTSDIR','../Scripts');
		AppState.VA_Reasons = '';
		AppState.vActCode = '';
		AppState.vANI = '';
		AppState.vBlockCode = '';
		AppState.vCaptureDT = '';
		AppState.vCounter = '';
		AppState.vCountryTag = '';
		AppState.vCreditCard = '';
		AppState.vCVV = '';
		AppState.vDate = '';
		AppState.vDOB = '';
		AppState.vEndTime = '';
		AppState.vErrMsg = '';
		AppState.vErrorCode = '';
		AppState.vHr = '';
		AppState.vIdentifier = '';
		AppState.vLocalTxnDtTime = '';
		AppState.vMin = '';
		AppState.vMonth = '';
		AppState.VOXFILEDIR = initSystemTypeVariable('VOXFILEDIR','../Resources/Prompts');
		AppState.vProcCode = '';
		AppState.vSec = '';
		AppState.vSTAN = '';
		AppState.vStTime = '';
		AppState.vTrav1 = '';
		AppState.vTrav2 = '';
		AppState.vTrav4 = '';
		AppState.vTxnDuration = '';
		AppState.vTxnEndDate = '';
		AppState.vTxnEndTime = '';
		AppState.vTxnStDate = '';
		AppState.vTxnStTime = '';
		AppState.vVBInputString = '';
		AppState.vWSTimeout = '';
		AppState.vYear = '';
		AppState.vVBOutputString = '';
	</script>

		
	<!-- Global Scripts -->
	<script srcexpr="AppState.VOXFILEDIR + '/PromptSwitch.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/en-US/en-US.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/en-IN/en-IN.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/hi-IN/hi-IN.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/mr-IN/mr-IN.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/ta-IN/ta-IN.js'" />
	<script>var f = new Format();</script>

	
	<script srcexpr="AppState.VOXFILEDIR + '/en-US/customprompts.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/en-IN/customprompts.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/hi-IN/customprompts.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/mr-IN/customprompts.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/ta-IN/customprompts.js'" />
	
	
	<!-- Global Properties declarations -->
	<property name="com.genesyslab.logtoasr" value="false" />   	
	<property name="com.genesyslab.loglevel" value="5" />

	<!-- Metadata information -->
	<meta name="com.genesyslab.studio.resourcePath" content="/Callflows/Sub_Call_Nuance.callflow"/>

	<!-- Global links -->
	<form>	
		<!-- VAR Parent Action Param -->
		<var name="varActionParentId" expr="''"/>
		<var name="ObjCall" expr="''"/>
		<block name="paramAssignment">
			<assign name="AppState.ObjCall" expr="ObjCall"/>
		</block>
		<block name="varAction">
			<if cond="varActionParentId==''">
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Sub_Call_Nuance</log>
			<else/>
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Sub_Call_Nuance|parentID=<value expr="varActionParentId"/></log>
			</if>
		</block>
		<block>
			<log expr="'Running Sub_Call_Nuance workflow.'"/>
			<log expr="'Code Generated by Composer: 8.1.450.20.'"/>
			<log expr="'Diagram created/upgraded by Composer: Composer 8.1.450.20.'"/>
			<log expr="'Project version: 8.1.450.20.'"/>
			<log expr="'Diagram version: 1.0 CreatedOn: .'"/>
			<goto next="#Entry1" />
		</block>
	</form>

	<!-- This is the Exit block -->
	<form id="Exit1">
		<block>
			<log gvp:level="1">
				<value expr="'AppState.ObjCall.vTrav1 is '+AppState.ObjCall.vTrav1;"/>
			</log>
    	</block>
		<block>
			<log label="com.genesyslab.var.ActionEnd" gvp:cond="AppState.EnableReports">Sub_Call_Nuance|UNKNOWN</log>
			<var name="ObjCall" expr="AppState.ObjCall"/>
			<return namelist="ObjCall"/>
  		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="Assign_initial">
		<block>
			<log gvp:level="4">
				<value expr="AppState.vActCode"/>
			</log>
    	</block>
		<block>
			
			<assign name="AppState.MYDATE" expr="new Date();" />
			<assign name="AppState.vDate" expr="AppState.MYDATE.getDate()" />
			<assign name="AppState.vYear" expr="AppState.MYDATE.getFullYear()" />
			<assign name="AppState.vHr" expr="AppState.MYDATE.getHours()" />
			<assign name="AppState.vMin" expr="AppState.MYDATE.getMinutes()" />
			<assign name="AppState.vSec" expr="AppState.MYDATE.getSeconds()" />
			<assign name="AppState.vStTime" expr="AppState.MYDATE.getTime()" />
			<assign name="AppState.vMonth" expr="AppState.MYDATE.getMonth()+1" />
			<assign name="AppState.vTxnStTime" expr="LocalTime(AppState.vHr,AppState.vMin,AppState.vSec)" />
			<assign name="AppState.vTxnStDate" expr="GetDate()" />
			<assign name="AppState.vProcCode" expr="'NUANCEREQ'" />
			<assign name="AppState.vCaptureDT" expr="ParseCaptureDate(AppState.vYear,AppState.vMonth,AppState.vDate)" />
			<assign name="AppState.vLocalTxnDtTime" expr="LocalTrnxTime(AppState.vCaptureDT,AppState.vHr,AppState.vMin,AppState.vSec)" />
			<assign name="AppState.vSTAN" expr="(AppState.vLocalTxnDtTime).slice(8, 14)" />				
			<goto next="#Log1" />
		</block>
	</form>
	<!-- This is the Entry block -->
	<form id="Entry1">
		<block name="Entry">
			<goto next="#Assign_initial" />
		</block>
	</form>	
	
	<catch event="error.semantic">
		<assign name="AppState.LAST_EVENT_ELEMENT" expr="_element"/>
    	<assign name="AppState.LAST_EVENT_MSG" expr="_message"/>
    	<assign name="AppState.LAST_EVENT_NAME" expr="_event"/>
    	<assign name="AppState.LAST_EVENT_LINE" expr="_line"/>
    	<assign name="AppState.LAST_EVENT_URL" expr="_url"/>
		<goto next="#ECMAScript_Semantic" />
    </catch>
	<catch event="connection.disconnect.hangup">
		<assign name="AppState.LAST_EVENT_ELEMENT" expr="_element"/>
    	<assign name="AppState.LAST_EVENT_MSG" expr="_message"/>
    	<assign name="AppState.LAST_EVENT_NAME" expr="_event"/>
    	<assign name="AppState.LAST_EVENT_LINE" expr="_line"/>
    	<assign name="AppState.LAST_EVENT_URL" expr="_url"/>
		<goto next="#ECMAScript_Hangup" />
    </catch>
	<catch event="error">
		<assign name="AppState.LAST_EVENT_ELEMENT" expr="_element"/>
    	<assign name="AppState.LAST_EVENT_MSG" expr="_message"/>
    	<assign name="AppState.LAST_EVENT_NAME" expr="_event"/>
    	<assign name="AppState.LAST_EVENT_LINE" expr="_line"/>
    	<assign name="AppState.LAST_EVENT_URL" expr="_url"/>
		<goto next="#ECMAScript_Hangup" />
    </catch>
	<catch event=".">
		<assign name="AppState.LAST_EVENT_ELEMENT" expr="_element"/>
    	<assign name="AppState.LAST_EVENT_MSG" expr="_message"/>
    	<assign name="AppState.LAST_EVENT_NAME" expr="_event"/>
    	<assign name="AppState.LAST_EVENT_LINE" expr="_line"/>
    	<assign name="AppState.LAST_EVENT_URL" expr="_url"/>
		<goto next="#ECMAScript_Hangup" />
    </catch>    
    

	<!-- This is the Branching block -->
	<form id="Chk_VB_Response">
		<block>
			<log gvp:level="1">
				<value expr="'AppState.vVBOutputString=' + AppState.vVBOutputString"/>
			</log>
    	</block>
		<block>
			<if cond="AppState.vVBOutputString==''||AppState.vVBOutputString==' '||AppState.vVBOutputString==null||AppState.vVBOutputString == 'null' ||AppState.vVBOutputString== 'undefined'">
				
				<!-- Post Action -->
				<script>
				try {
	// your code
	
	AppState.ObjCall.vTrav1=AppState.ObjCall.vTrav1+'EF002;';
} catch (error) {
	// error handling code
}
				
				</script>
				
				<!-- This is the OutLink -->
				<goto next="#NuanceFailed" />
			</if>
			<if cond="AppState.vVBOutputString!=''&amp;&amp;AppState.vVBOutputString!=' '&amp;&amp;AppState.vVBOutputString!=null&amp;&amp;AppState.vVBOutputString != 'null' &amp;&amp;AppState.vVBOutputString!= 'undefined'">
				
				<!-- Post Action -->
				<script>
				try {
	// your code
	
	AppState.ObjCall.vTrav1=AppState.ObjCall.vTrav1+'ES002;';
} catch (error) {
	// error handling code
}
				
				</script>
				
				<!-- This is the OutLink -->
				<goto next="#NuanceSuccess" />
			</if>
			<goto next="#NuanceSuccess" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="NuanceSuccess">
		<block>
			<log gvp:level="1">
				<value expr="AppState.vVBOutputString"/>
			</log>
    	</block>
		<block>
			
			<assign name="AppState.MYDATE" expr="new Date()" />
			<assign name="AppState.vDate" expr="AppState.MYDATE.getDate()" />
			<assign name="AppState.vYear" expr="AppState.MYDATE.getFullYear()" />
			<assign name="AppState.vHr" expr="AppState.MYDATE.getHours()" />
			<assign name="AppState.vMin" expr="AppState.MYDATE.getMinutes()" />
			<assign name="AppState.vSec" expr="AppState.MYDATE.getSeconds()" />
			<assign name="AppState.vEndTime" expr="AppState.MYDATE.getTime()" />
			<assign name="AppState.vMonth" expr="AppState.MYDATE.getMonth() + 1" />
			<assign name="AppState.vTxnEndDate" expr="GetDate()" />
			<assign name="AppState.ANI" expr="LocalTime(AppState.varHr,AppState.varMin,AppState.varSec)" />
			<assign name="AppState.vTxnDuration" expr="(AppState.varEndTime-AppState.varStTime)/1000" />
			<assign name="AppState.vVBInputString" expr="'Y'" />
			<assign name="AppState.vActCode" expr="'Y'" />				
			<goto next="#ECMAScript1" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="NuanceFailed">
		<block>
			
			<assign name="AppState.MYDATE" expr="new Date()" />
			<assign name="AppState.vDate" expr="AppState.MYDATE.getDate()" />
			<assign name="AppState.vYear" expr="AppState.MYDATE.getFullYear()" />
			<assign name="AppState.vHr" expr="AppState.MYDATE.getHours()" />
			<assign name="AppState.vMin" expr="AppState.MYDATE.getMinutes()" />
			<assign name="AppState.vSec" expr="AppState.MYDATE.getSeconds()" />
			<assign name="AppState.vEndTime" expr="AppState.MYDATE.getTime()" />
			<assign name="AppState.vMonth" expr="AppState.MYDATE.getMonth() + 1" />
			<assign name="AppState.vTxnEndDate" expr="GetDate()" />
			<assign name="AppState.vTxnEndTime" expr="LocalTime(AppState.varHr,AppState.varMin,AppState.varSec)" />
			<assign name="AppState.vTxnDuration" expr="(AppState.varEndTime-AppState.varStTime)/1000" />
			<assign name="AppState.vTrav4" expr="'N'" />
			<assign name="AppState.vActCode" expr="'N'" />
			<assign name="AppState.VA_Reasons" expr="'R_NWSFail'" />				
			<goto next="#WSInsertTxnNuance" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMAScript1">
		<block>
			<log gvp:level="1">
				<value expr="'AppState.vVBOutputString is '+AppState.vVBOutputString"/>
			</log>
    	</block>
		<block>
			<script>
				AppState.ObjCall.vVBOutputString=AppState.vVBOutputString
			</script>	
			<goto next="#WSInsertTxnNuance" />
		</block>
	</form>

	<!-- This is the Log block -->
	<form id="Log1">
		<block>
			<log gvp:level="1">
				<value expr="AppState.ObjCall.vVBInput"/>
			</log>
    	</block>
    	<block>
    		<goto next="#WSGetVBResponse" />
    	</block>
	</form>

	<!-- This is the WebService block -->
	<form id="WSGetVBResponse">
		<block>
			<if cond="(AppState.COMPOSER_WSSTUBBING == '1') || (AppState.COMPOSER_WSSTUBBING == 1)" >
				<!-- Web Service is stubbed !! -->
				
				
					<if cond="checkIsObject('')">
							<assign name="AppState.vVBOutputString" expr="WSGetVBResponseResponse.GetAccountStatusResponse.GetAccountStatusResult"/>
							<log> Stubbing: assigned "AppState.vVBOutputString"="WSGetVBResponseResponse.GetAccountStatusResponse.GetAccountStatusResult" /> </log>
			   		<else/>
			   				<assign name="AppState.vVBOutputString" expr="''"/>
			   				<log> Stubbing: assigned "AppState.vVBOutputString"="" /> </log>
					</if>
				<goto next="#Chk_VB_Response" />
			</if>
		
				
		<!-- Stubbing is Off - normal processing continues -->
		
		
		<script>
			var requestObj = new Object();
			requestObj['WebUrl'] 	='http://10.22.71.76:8875/speakerverification';
			requestObj['MethodName']='GetAccountStatus';
			requestObj['Protocol']	='SOAP';
			requestObj['AuthenAccess']='Anonymous';
			requestObj['UserName']	='';
			requestObj['Password']	='';
			requestObj['enableProxy']=false;
			requestObj['proxyHost']='';
			requestObj['proxyPort']=80;
			requestObj['proxyUserName']='';
			requestObj['proxyPassword']='';
			requestObj['SOAPActionURI']		='http://tempuri.org/IISpeakerVerification/GetAccountStatus';
			requestObj['targetNameSpaceUri']='http://tempuri.org/';
			requestObj['KeyStorePass']='';
			requestObj['KeyStoreFilePath']	='';
			requestObj['PrivateKeyPass']	='';
			requestObj['PrivateKeyAlias']	='';
			requestObj['CertStoreName']		='';
			requestObj['CertAlias']			='';
			requestObj['SigAlgorithm']		='DSA';
			requestObj['NameSpaceMap']		='{"wsa":"http://schemas.xmlsoap.org/ws/2004/08/addressing","wsaw":"http://www.w3.org/2006/05/addressing/wsdl","wsa10":"http://www.w3.org/2005/08/addressing","xsd":"http://www.w3.org/2001/XMLSchema","soap12":"http://schemas.xmlsoap.org/wsdl/soap12/","soapenc":"http://schemas.xmlsoap.org/soap/encoding/","wsdl":"http://schemas.xmlsoap.org/wsdl/","wsp":"http://www.w3.org/ns/ws-policy","tns":"http://tempuri.org/","wsu":"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd","GetAccountStatus":"http://tempuri.org/","msc":"http://schemas.microsoft.com/ws/2005/12/wsdl/contract","wsap":"http://schemas.xmlsoap.org/ws/2004/08/addressing/policy","wsx":"http://schemas.xmlsoap.org/ws/2004/09/mex","soap":"http://schemas.xmlsoap.org/wsdl/soap/","wsam":"http://www.w3.org/2007/05/addressing/metadata"}';
	        requestObj['EnableNSPrefix'] = false;
	        requestObj['PrefixForChildTags'] = false;
	        requestObj['CustomPrefix'] = '';
	        requestObj['AppStateString'] = JSON.stringify(AppState);
	        requestObj['VariableScope'] = 'AppState.';
	        requestObj['CustomSOAPEnvFileName']='';	
			var parameters = [{name:'accountsInfo', value: AppState.ObjCall.vVBInput}];
    	
			requestObj['Timeout'] = '90';
			requestObj['Parameters'] = parameters;
		</script>
		<data name="WSGetVBResponseResponse" enctype="application/json" gvp:contentexpr="requestObj" method="post" src="../include/getWebServiceData.aspx" />
		
			
				
					<if cond="checkIsObject(WSGetVBResponseResponse)">
							<assign name="AppState.vVBOutputString" expr="WSGetVBResponseResponse.GetAccountStatusResponse.GetAccountStatusResult"/>
	   				<else/>
		    				<assign name="AppState.vVBOutputString" expr="WSGetVBResponseResponse"/>
    				</if>
	   		<if cond="typeof WSGetVBResponseResponse.errorMsg == 'undefined'">
				<goto next="#Chk_VB_Response" />
			<else/>
        		<throw event="error.com.genesyslab.composer.webservice.badFetch" messageexpr="WSGetVBResponseResponse.errorMsg" />
        	</if>	
			</block>
			
			<catch event="error.badfetch">
				<goto next="#ECMAScript_AssigntoObject" />
    		</catch>
			<catch event="error.com.genesyslab.composer.webservice.badFetch">
				<goto next="#ECMAScript_AssigntoObject" />
    		</catch>
		
		
	</form>	

	<!-- This is the Assign block -->
	<form id="ECMAScript_Semantic">
		<block>
			<script>
				try {
						// your code
						AppState.ObjCall.vTrav1=AppState.ObjCall.vTrav1+'';
					} catch (error) {
						// error handling code
					}
			</script>	
			<goto next="#ECMAScript_AssigntoObject" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMAScript_Hangup">
		<block>
			<script>
				try {
						// your code
						
						AppState.ObjCall.vTrav1=AppState.ObjCall.vTrav1+'';
					} catch (error) {
						// error handling code
					}
			</script>	
			<goto next="#ECMAScript_AssigntoObject" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMAScript_AssigntoObject">
		<block>
			<script>
				try{
							AppState.LAST_EVENT_NAME=AppState.LAST_EVENT_NAME.replace(new RegExp('undefined','g'), '');
							__Log('####AppState.ObjCall.vCallEndReason :  '+AppState.ObjCall.vCallEndReason);
							__Log('####AppState.LAST_EVENT_NAME :  '+AppState.LAST_EVENT_NAME);
							__Log('####AppState.LAST_EVENT_URL :  '+AppState.LAST_EVENT_URL);
					if(AppState.LAST_EVENT_NAME==''){
							__Log('*****AppState.ObjCall.vCallEndReason is Carrying Previous Subdialogs EVENT :  '+AppState.ObjCall.vCallEndReason);
							__Log('*****AppState.ObjCall.vCallEndDetails  is Carrying Previous Subdialogs EVENT :  '+AppState.ObjCall.vCallEndDetails);
							AppState.ObjCall.vCallEndReason=getcallendreasonbyeventempty(AppState.ObjCall.vCallEndReason, AppState.ObjCall.vSubCallFlag);
							__Log('####AppState.vCallEndReason IN IF Cond Post JS function :  '+AppState.ObjCall.vCallEndReason);
					}else{
							AppState.ObjCall.vCallEndDetails=AppState.LAST_EVENT_ELEMENT+'#'+AppState.LAST_EVENT_LINE+'#'+AppState.LAST_EVENT_NAME+'#'+AppState.LAST_EVENT_URL;
							__Log('####AppState.LAST_EVENT_NAME before getcallendreason function is   :  '+AppState.LAST_EVENT_NAME);
							__Log('####AppState.ObjCall.vCallEndDetails are  :  '+AppState.ObjCall.vCallEndDetails);
							AppState.ObjCall.vCallEndReason=getcallendreason(AppState.LAST_EVENT_NAME);
							__Log('####AppState.vCallEndReason Post JS function :  '+AppState.ObjCall.vCallEndReason);
					}
							__Log('@@@@@FINAL Appstate.ObjCall.vCallEndReason INSIDE' +AppState.LAST_EVENT_URL+' is  :  '+AppState.ObjCall.vCallEndReason);
							__Log('@@@@@FINAL Appstate.ObjCall.vCallEndDetails INSIDE' +AppState.LAST_EVENT_URL+' is  :  '+AppState.ObjCall.vCallEndDetails);
					}	catch (error) {
							__Log('  ####  ERROR WHILE HANDLING ERROR EVENTS  ####  ');
					}
			</script>	
			<goto next="#ECMAScript_getCallDisconnect" />
		</block>
	</form>

	<!-- This is the Branching block -->
	<form id="Branching_Customer_Disconnect">
		<block>
			<if cond="AppState.ObjCall.CallDisconnectFlag=='D'">
				
				<!-- This is the OutLink -->
				<goto next="#DB_Validation" />
			</if>
			<goto next="#Exit1" />
		</block>
	</form>

	<!-- This is the Log block -->
	<form id="DB_Validation">
		<block>
			<log gvp:level="1">
				<value expr="'****ValueofTrav1 is**** ' + AppState.vTrav1"/>
			</log>
			<log gvp:level="1">
				<value expr="'AppState.ObjCall.vTxnStTime is : '+AppState.ObjCall.vTxnStTime"/>
			</log>
    	</block>
    	<block>
    		<goto next="#Subdialog_InsertMasterData" />
    	</block>
	</form>

	<!-- This is the Subdialog block -->
	<form id="Subdialog_InsertMasterData">

		<subdialog name="Subdialog_InsertMasterDataSubdialog" fetchhint="prefetch"  src="../src-gen/sub_InsertMasterData.vxml">
    		<param name="varActionParentId" expr="'Sub_Call_Nuance'"/>
			<param name="ObjCall" expr="AppState.ObjCall" />
			<filled>
				<if cond="Subdialog_InsertMasterDataSubdialog.ObjCall != 'undefined'">
  					<assign name="AppState.ObjCall" expr="Subdialog_InsertMasterDataSubdialog.ObjCall" /> 
  				</if>
				<goto next="#Disconnect_error" />
			</filled>
		</subdialog>
		
    	<catch event="error.semantic">
    <goto next="#Disconnect_error" />
    	</catch>
    	<catch event="error.badfetch">
    <goto next="#Disconnect_error" />
    	</catch>
    	<catch event="error">
    <goto next="#Disconnect_error" />
    	</catch>
	</form>

	<!-- This is the Disconnect block -->
	<form id="Disconnect_error">
		<block>

			<disconnect />
    	</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMAScript_getCallDisconnect">
		<block>
			<script>
				try {
					
					__Log('******** Call Disconnect Method Call AppState.ObjCall.vCallEndReason : '+AppState.ObjCall.vCallEndReason+' AppState.ObjCall.vSubCallFlag : '+AppState.ObjCall.vSubCallFlag);
					AppState.ObjCall.CallDisconnectFlag=getCallDisconnect(AppState.ObjCall.vCallEndReason,AppState.ObjCall.vSubCallFlag);
					__Log('******* AppState.ObjCall.CallDisconnectFlag : '+AppState.ObjCall.CallDisconnectFlag);
					
					} catch (error) {
					__Log('********* Error while get Calldisconnect Flag');
					}
			</script>	
			<goto next="#Branching_Customer_Disconnect" />
		</block>
	</form>

	<!-- This is the WSInsertTxnNuance block in Disabled mode -->
	<form id="WSInsertTxnNuance">
    	<block>
    		<goto next="#ECMAScript_AssigntoObject" />
    	</block>
	</form>

</vxml>
